# flopoco completion 
# put this file in /etc/bash_completion.d/ , for instance by
#    ln -s FULLPATHTOBashCompletion/flopoco /etc/bash_completion.d/

# Should be kept in the order of the parser in main.cpp
_flopoco()
{
        local cur prev opts

        COMPREPLY=()
        cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}
	opts="-outputfile -target -pipeline -frequency \ 
			-clockenable -DSP_blocks -name -resourceEstimationLevel -floorplanning \ 
			-verbose -reDebugging -flpDebugging"
	opers="UserDefinedOperator LeftShifter RightShifter LZOC LZOCShifter LZCShifter LOCShifter LZOCShifterSticky LZCShifterSticky LOCShifterSticky \ 
      ShiftReg FixSOPC FixSOPCExpert FixFIR FixIIR FixHalfSine \
			IntAdder IntAdderExpert IntComparator \ 
			IntDualSub \ 
			IntMultiplier IntSquarer FixMultAdd \ 
			FPAdd FPSub FPAddDualPath FPAdd3Input FPAddSub \ 
    	FPMult FPMultFaithful FPMultExpert FPSquare \					
			FPDiv FPSqrt \ 
      IntIntKCM IntConstMult IntConstDiv IntConstRem FPConstMultRational FPConstMultExpert FPConstDiv FPConstDivExpert FixRealKCM FixRealKCMExpert FPRealKCM CRFPConstMult FPConstMult \
      FPLargeAcc LargeAccToFP FPDotProduct \
      BasicPolyApprox PiecewisePolyApprox FixFunctionByTable FixFunctionBySimplePoly FixFunctionByPiecewisePoly FixSinCos CordicSinCos FixAtan2 FPLog FPExp FPExpExpert FPPowerExpert FPPow FPPowr \
			Fix2FP FP2Fix InputIEEE OutputIEEE \ 
			TestBench TestBenchFile \ 
			Wrapper \ 
			options"
			
	shopt -s extglob
	
	shortops='+(UserDefinedOperator|LeftShifter|RightShifter|LZOC|LZOCShifter|LZCShifte|LOCShifter|LZOCShifterSticky|LZCShifterSticky|LOCShifterSticky|IntAdder|IntAdderExpert|LongIntAdderAddAddMux|LongIntAdderCmpAddInc|LongIntAdderCmpCmpAdd|\IntDualSub|IntNAdder|IntMultiAdder|IntCompressorTree|NewCompressorTree|PopCount|BasicCompressor|IntMultiplier|FixSinPoly|FixXPow3Div6|IntConstDiv3|IntMultAdd|IntKaratsuba|IntSquarer|IntPower|IntConstMult|IntIntKCM|FixRealKCM|FixedPointFIR|FixedPointDCT|IntConstDiv|IntConstRem|FPConstDiv|FPPipeline|Fix2FP|FP2Fix|FPAdd|FPAddDualPath|FPAdd3Input|FPAddSub|FPMult|FPMultFaithful|FPMultKaratsuba|FPMultExpert|FPSquare|FPDiv|FPSqrt|FP2DNorm|FPSqrtPoly|FPConstMult|CRFPConstMult|FPConstMultRational|FPConstMultExpert|FPRealKCM|FPLargeAcc|LargeAccToFP|DotProduct|FPExp|FPExpExpert|FPLog|FPPowr|FPPow|FPPower|FPPowerExpert|OutputIEEE|InputIEEE|FixSinCos|FixSinOrCos|SinCos|CordicSinCos|BasicPolyApprox|PiecewisePolyApprox|FixFunctionByTable|FixFunctionBySimplePoly|HOTBM|HOTBMFX|HOTBMRange|Complex|FixComplexAdder|FixComplexMultiplier|LNSAddSub|LNSMul|LNSDiv|LNSSqrt|LNSAddSub|LNSMul|LNSDiv|LNSSqrt|AtanPow|Collision|FPSumOf3Squares)'
			
	case "${prev}" in
		-outputfile)
		    COMPREPLY=( $( compgen -W "user_defined_name flopoco.vhdl(default)" -- $cur ) )
		    return 0
		    ;;
		-target)
		    COMPREPLY=( $( compgen -W "Spartan3 Virtex4 Virtex5 Virtex6 StratixII StratixIII StratixIV StratixV CycloneII CycloneIII CycloneIV CycloneV" -- $cur ) )
		    return 0
		    ;;
		-pipeline)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		-frequency)
		    COMPREPLY=( $( compgen -W "user_defined_frequency 400(default)" -- $cur ) )
		    return 0
		    ;;
		-clockenable)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		-DSP_blocks)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		-resourceEstimationLevel)
		    COMPREPLY=( $( compgen -W "0 1 2 3" -- $cur ) )
		    return 0
		    ;;
		-floorplanning)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		-verbose)
		    COMPREPLY=( $( compgen -W "0 1 2 3" -- $cur ) )
		    return 0
		    ;;
		-reDebugging)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		-flpDebugging)
		    COMPREPLY=( $( compgen -W "yes no" -- $cur ) )
		    return 0
		    ;;
		$shortops)
		    COMPREPLY=( $( compgen -W "TestBench TestBenchFile Wrapper" -- $cur ) )
		    return 0
		    ;;
		*)
		;;
	    esac

        if [[ "$cur" == -* ]]; then
                COMPREPLY=( $( compgen -W "${opts}" -- $cur ) )
        else
                COMPREPLY=( $( compgen -W "${opers}" -- $cur ) )
        fi

}

complete -F _flopoco flopoco
